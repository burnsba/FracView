<Window x:Class="FracViewWpf.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FracViewWpf.Windows"
        xmlns:converters="clr-namespace:FracViewWpf.Converters"
        mc:Ignorable="d"
        xmlns:viewmodels="clr-namespace:FracViewWpf.ViewModels"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        Title="MainWindow" Height="450" Width="800"
        SizeChanged="MainWindow_SizeChanged"
        >
    <Window.Resources>
        <ResourceDictionary>
            <converters:BoolToInvertedBoolConverter x:Key="BoolToInvertedBoolConverter" />
            <converters:BoolToValidationColorConverter x:Key="BoolToValidationColorConverter" />
        </ResourceDictionary>
    </Window.Resources>
    
    <DockPanel>

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open"/>
                <MenuItem Header="_Close"/>
                <MenuItem Header="_Save"/>
            </MenuItem>
        </Menu>

        <ToolBar DockPanel.Dock="Top">
            <ToolBar Band="1" BandIndex="1">
                <Button>
                    <TextBlock>Zoom Out</TextBlock>
                </Button>
                <Button>
                    <TextBlock>Reset</TextBlock>
                </Button>
                <Button>
                    <TextBlock>Zoom In</TextBlock>
                </Button>
                <Button>
                    <TextBlock>Recenter</TextBlock>
                </Button>
            </ToolBar>
        </ToolBar>

        <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="100" Width="Auto" MaxWidth="200"/>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="StatusBarCurrentWork" Text="{Binding Path=StatusBarCurrentWork}"></TextBlock>
            </StatusBarItem>
            
            <Separator Grid.Column="1" />

            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="StatusBarStepText" Text="{Binding Path=StatusBarStepText}"></TextBlock>
            </StatusBarItem>

            <StatusBarItem Grid.Column="3">
                <ProgressBar x:Name="StatusBarProgressBar" Value="{Binding Path=StatusBarProgressValue, Mode=OneWay}" Width="90" Height="16" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="4">
                <TextBlock x:Name="StatusBarElapsedText" Text="{Binding Path=StatusBarElapsedText}"></TextBlock>
            </StatusBarItem>

            <Separator Grid.Column="5" />
        </StatusBar>

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="130px" MinHeight="130px"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions></Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Name="ImageGridContainer" MinWidth="128" MinHeight="128">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid
                Grid.Column="0"
                VerticalAlignment="Bottom"
                >
                    <StackPanel Orientation="Vertical">
                        <TextBlock>Pixel Left/Top</TextBlock>
                        <TextBox Text="{Binding Path=TextPixelLeftTop}" IsReadOnly="True"></TextBox>
                        <TextBlock>Pixel Center</TextBlock>
                        <TextBox Text="{Binding Path=TextPixelCenter}" IsReadOnly="True"></TextBox>
                        <TextBlock>Pixel Width/Height</TextBlock>
                        <TextBox Text="{Binding Path=TextPixelWidthHeight}" IsReadOnly="True"></TextBox>
                        
                        <TextBlock>Fractal Left/Top</TextBlock>
                        <TextBox Text="{Binding Path=TextFractalLeftTop}" IsReadOnly="True"></TextBox>
                        <TextBlock>Fractal Center</TextBlock>
                        <TextBox Text="{Binding Path=TextFractalCenter}" IsReadOnly="True"></TextBox>
                        <TextBlock>Fractal Width/Height</TextBlock>
                        <TextBox Text="{Binding Path=TextFractalWidthHeight}" IsReadOnly="True"></TextBox>
                        
                        <TextBlock>Mouse Pixel X/Y</TextBlock>
                        <TextBox Text="{Binding Path=TextMousePixelXy}" IsReadOnly="True"></TextBox>
                        <TextBlock>Mouse Fractal X/Y</TextBlock>
                        <TextBox Text="{Binding Path=TextMouseFractalXy}" IsReadOnly="True"></TextBox>
                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"></GridSplitter>

                <Border Grid.Column="2"
                    VerticalAlignment="Top"
                        BorderThickness="2"
                        BorderBrush="#FFBDBDBD"
                        Width="{Binding Path=ImageWidth}"
                        Height="{Binding Path=ImageHeight}"
                        MinWidth="128"
                        MinHeight="128"
                        >
                    <ScrollViewer
                        Name="MainDisplayImageScrollViewer"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"
                        MouseWheel="MainDisplayImageScrollViewer_MouseWheel"
                        ScrollChanged="MainDisplayImageScrollViewer_ScrollChanged"
                        >
                        <Image
                            Name="MainDisplayImage"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            MinWidth="128"
                            MinHeight="128"
                            Source="{Binding Path=ImageSource}"
                            Width="{Binding Path=ImageWidth}"
                            Height="{Binding Path=ImageHeight}"
                            RenderTransformOrigin="0.5,0.5"
                            MouseWheel="Image_MouseWheel"
                                
                            MouseLeftButtonDown="MainDisplayImageScrollViewer_MouseLeftButtonDown"
                            PreviewMouseMove="MainDisplayImageScrollViewer_PreviewMouseMove"
                            PreviewMouseLeftButtonUp="MainDisplayImageScrollViewer_PreviewMouseLeftButtonUp"
                            >
                            <Image.RenderTransform>
                                <ScaleTransform/>
                            </Image.RenderTransform>
                        </Image>
                    </ScrollViewer>
                </Border>
            </Grid>

            

            <Grid
                Grid.Row="1"
                VerticalAlignment="Bottom">

                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"></RowDefinition>
                    <RowDefinition Height="3*"></RowDefinition>
                    <RowDefinition Height="3*"></RowDefinition>
                    <RowDefinition Height="3*"></RowDefinition>
                    <RowDefinition Height="3*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">Origin.X</Label>
                <TextBox Grid.Row="0" Grid.Column="1" x:Name="UiOriginX" VerticalAlignment="Center" Text="{Binding Path=TextOriginX}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=OriginXIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>
                <Label Grid.Row="0" Grid.Column="2" VerticalAlignment="Center">Origin.Y</Label>
                <TextBox Grid.Row="0" Grid.Column="3" x:Name="UiOriginY" VerticalAlignment="Center" Text="{Binding Path=TextOriginY}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=OriginYIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>

                <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">Fractal Width</Label>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="UiOriginFractalWidth" VerticalAlignment="Center" Text="{Binding Path=TextFractalWidth}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=FractalWidthIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>
                <Label Grid.Row="1" Grid.Column="2" VerticalAlignment="Center">Fractal Height</Label>
                <TextBox Grid.Row="1" Grid.Column="3" x:Name="UiOriginFractalHeight" VerticalAlignment="Center" Text="{Binding Path=TextFractalHeight}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=FractalHeightIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>

                <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Center">Step Width</Label>
                <TextBox Grid.Row="2" Grid.Column="1" x:Name="UiPixelWidth" VerticalAlignment="Center" Text="{Binding Path=TextStepWidth}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=StepWidthIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>
                <Label Grid.Row="2" Grid.Column="2" VerticalAlignment="Center">Step Height</Label>
                <TextBox Grid.Row="2" Grid.Column="3" x:Name="UiPixelHeight" VerticalAlignment="Center" Text="{Binding Path=TextStepHeight}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=StepHeightIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>

                <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center">Max Iterations</Label>
                <TextBox Grid.Row="3" Grid.Column="1" x:Name="UiMaxIterations" VerticalAlignment="Center" Text="{Binding Path=TextMaxIterations}">
                    <TextBox.Background>
                        <SolidColorBrush Color="{Binding Path=MaxIterationsIsValid, Converter={StaticResource BoolToValidationColorConverter}}"></SolidColorBrush>
                    </TextBox.Background>
                </TextBox>
                <Label Grid.Row="3" Grid.Column="2" VerticalAlignment="Center">Histogram</Label>
                <CheckBox Grid.Row="3" Grid.Column="3" x:Name="UiUseHistogram" VerticalAlignment="Center" IsChecked="{Binding Path=UseHistogram}"></CheckBox>

                <Label Grid.Row="4" Grid.Column="0" VerticalAlignment="Center">Colors</Label>
                <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                    <Button MinWidth="32" Command="{Binding Path=ShowColorsWindowCommand}">
                        <TextBlock Padding="6,0,6,0">Manage</TextBlock>
                    </Button>
                    <Button MinWidth="32" Command="{Binding Path=RecolorCommand}" Margin="14,0,0,0">
                        <TextBlock Padding="6,0,6,0">Recolor</TextBlock>
                    </Button>
                </StackPanel>
                <Label Grid.Row="4" Grid.Column="2" VerticalAlignment="Center"></Label>

                <StackPanel Grid.Row="4" Grid.Column="3" Orientation="Horizontal">
                    <Button MinWidth="32" Command="{Binding Path=ComputeCommand}">
                        <TextBlock Text="{Binding Path=ComputeCommandText}" Padding="6,0,6,0"></TextBlock></Button>
                </StackPanel>

            </Grid>

        </Grid> 

    </DockPanel>
</Window>
